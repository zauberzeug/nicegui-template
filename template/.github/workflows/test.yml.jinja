{%- import 'py-versions.jinja' as python -%}
name: Run Tests

on: [push]

jobs:
  code-checks:
    strategy:
      fail-fast: false
      matrix:
        tools:
          - command: ["mypy", "./{{ module_name }}", "--non-interactive", "--install-types"]
          - command: ["pylint", "./{{ module_name }}"]
          - command: [{% if use_precommit %}"pre-commit", "run", "--all-files"{% else %}"ruff", "check", "./{{ module_name }}"{% endif %}]
    name: {% raw %}code check - ${{ matrix.tools.command[0] }}{% endraw %}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      {%- if use_poetry %}
      - name: set up Poetry
        uses: abatilo/actions-poetry@v4
      {%- endif %}
      - name: set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "{{ python.min(python_versions) }}"
          cache: "{% if use_poetry %}poetry{% else %}pip{% endif %}"
      - name: install dependencies
        run: {% if use_poetry %}poetry install --with dev --no-root{% else %}pip install -r requirements-dev.txt{% endif %}
      - name: {% raw %}${{ matrix.tools.command[0] }}{% endraw %}
        run: {% if use_poetry %}poetry run {% endif %}{% raw %}${{ join(matrix.tools.command, ' ') }}{% endraw %}
  test:
    strategy:
      matrix:
        python: {{ python_versions }}
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      {%- if use_poetry %}
      - name: set up Poetry
        uses: abatilo/actions-poetry@v4
      {%- endif %}
      - name: setup up Python
        uses: actions/setup-python@v5
        with:
          python-version: {% raw %}${{ matrix.python }}{% endraw %}
          cache: "{% if use_poetry %}poetry{% else %}pip{% endif %}"
      - name: install dependencies
        run: {% if use_poetry %}poetry install --with test --no-root{% else %}pip install -r requirements-dev.txt{% endif %}
      - name: pytest
        run: {% if use_poetry %}poetry run {% endif %}pytest
